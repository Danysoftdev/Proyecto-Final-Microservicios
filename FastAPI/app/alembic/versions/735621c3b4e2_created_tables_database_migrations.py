"""
This file is a database migration file, it is used to create the tables in the database.

This file is created by the Alembic library.

The file is used to create the tables in the database, the tables are:

- categories
- food_types
- groups
- measurement_units
- users
- ingredients
- menus
- notifications
- recipes
- user_groups
- menus_groups
- menus_recipes
- pantries_ingredients
- recipes_food_types
- recipes_ingredients
- shop_list_items
"""

# pylint: skip-file
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '735621c3b4e2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(length=50), nullable=False),
    sa.Column('category_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_index(op.f('ix_categories_category_id'), 'categories', ['category_id'], unique=False)
    op.create_table('food_types',
    sa.Column('food_type_id', sa.Integer(), nullable=False),
    sa.Column('food_type_name', sa.String(length=50), nullable=False),
    sa.Column('food_type_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('food_type_id')
    )
    op.create_index(op.f('ix_food_types_food_type_id'), 'food_types', ['food_type_id'], unique=False)
    op.create_table('groups',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('groups_name', sa.String(length=100), nullable=False),
    sa.Column('groups_description', sa.String(length=255), nullable=True),
    sa.Column('group_created', sa.DateTime(), nullable=True),
    sa.Column('group_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('group_id')
    )
    op.create_index(op.f('ix_groups_group_id'), 'groups', ['group_id'], unique=False)
    op.create_table('measurement_units',
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('unit_name', sa.String(length=50), nullable=False),
    sa.Column('unit_abbreviation', sa.String(length=10), nullable=False),
    sa.Column('unit_type', sa.Enum('mass', 'volume', 'unit'), nullable=False),
    sa.PrimaryKeyConstraint('unit_id')
    )
    op.create_index(op.f('ix_measurement_units_unit_id'), 'measurement_units', ['unit_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('user_email', sa.String(length=100), nullable=False),
    sa.Column('user_password', sa.String(length=255), nullable=False),
    sa.Column('user_pfp', sa.String(length=255), nullable=True),
    sa.Column('user_created', sa.DateTime(), nullable=True),
    sa.Column('user_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('ingredients',
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_name', sa.String(length=100), nullable=False),
    sa.Column('ingredient_calories_per_unit', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('ingredient_price_per_unit', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('ingredient_created_date', sa.DateTime(), nullable=False),
    sa.Column('ingredient_expiration_date', sa.DateTime(), nullable=False),
    sa.Column('ingredient_description', sa.Text(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.category_id'], ),
    sa.PrimaryKeyConstraint('ingredient_id')
    )
    op.create_index(op.f('ix_ingredients_ingredient_id'), 'ingredients', ['ingredient_id'], unique=False)
    op.create_table('menus',
    sa.Column('menu_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('menu_created', sa.DateTime(), nullable=True),
    sa.Column('menu_updated', sa.DateTime(), nullable=True),
    sa.Column('menu_type', sa.Enum('Breakfast', 'Lunch', 'Dinner', 'Other'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('menu_id')
    )
    op.create_index(op.f('ix_menus_menu_id'), 'menus', ['menu_id'], unique=False)
    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.Enum('Purchase Reminder', 'Food Preparation', 'Product Expiration'), nullable=False),
    sa.Column('notification_message', sa.Text(), nullable=False),
    sa.Column('notification_created_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_index(op.f('ix_notifications_notification_id'), 'notifications', ['notification_id'], unique=False)
    op.create_table('recipes',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('recipe_name', sa.String(length=100), nullable=False),
    sa.Column('recipe_description', sa.Text(), nullable=False),
    sa.Column('recipe_prepare_time', sa.Integer(), nullable=False),
    sa.Column('recipe_difficulty', sa.Enum('easy', 'medium', 'hard'), nullable=False),
    sa.Column('recipe_portions', sa.Integer(), nullable=False),
    sa.Column('recipe_instructions', sa.Text(), nullable=True),
    sa.Column('recipe_is_public', sa.Boolean(), nullable=False),
    sa.Column('recipe_created', sa.DateTime(), nullable=True),
    sa.Column('recipe_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('recipe_id')
    )
    op.create_index(op.f('ix_recipes_recipe_id'), 'recipes', ['recipe_id'], unique=False)
    op.create_table('user_groups',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('rol', sa.Enum('admin', 'member'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('menus_groups',
    sa.Column('menu_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.menu_id'], ),
    sa.PrimaryKeyConstraint('menu_id', 'group_id')
    )
    op.create_table('menus_recipes',
    sa.Column('menu_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.menu_id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.recipe_id'], ),
    sa.PrimaryKeyConstraint('menu_id', 'recipe_id')
    )
    op.create_table('pantries_ingredients',
    sa.Column('pantries_ingredients_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('pantry_ingredient_quantity', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('pantry_ingredient_expiration_date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.ingredient_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('pantries_ingredients_id')
    )
    op.create_index(op.f('ix_pantries_ingredients_pantries_ingredients_id'), 'pantries_ingredients', ['pantries_ingredients_id'], unique=False)
    op.create_table('recipes_food_types',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('food_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['food_type_id'], ['food_types.food_type_id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.recipe_id'], ),
    sa.PrimaryKeyConstraint('recipe_id', 'food_type_id')
    )
    op.create_table('recipes_ingredients',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('measurement_unit_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.ingredient_id'], ),
    sa.ForeignKeyConstraint(['measurement_unit_id'], ['measurement_units.unit_id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.recipe_id'], ),
    sa.PrimaryKeyConstraint('recipe_id', 'ingredient_id')
    )
    op.create_table('shop_list_items',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_ingredient_id', sa.Integer(), nullable=False),
    sa.Column('item_quantity', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('item_total_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['item_ingredient_id'], ['ingredients.ingredient_id'], ),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_index(op.f('ix_shop_list_items_item_id'), 'shop_list_items', ['item_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_shop_list_items_item_id'), table_name='shop_list_items')
    op.drop_table('shop_list_items')
    op.drop_table('recipes_ingredients')
    op.drop_table('recipes_food_types')
    op.drop_index(op.f('ix_pantries_ingredients_pantries_ingredients_id'), table_name='pantries_ingredients')
    op.drop_table('pantries_ingredients')
    op.drop_table('menus_recipes')
    op.drop_table('menus_groups')
    op.drop_table('user_groups')
    op.drop_index(op.f('ix_recipes_recipe_id'), table_name='recipes')
    op.drop_table('recipes')
    op.drop_index(op.f('ix_notifications_notification_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_menus_menu_id'), table_name='menus')
    op.drop_table('menus')
    op.drop_index(op.f('ix_ingredients_ingredient_id'), table_name='ingredients')
    op.drop_table('ingredients')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_measurement_units_unit_id'), table_name='measurement_units')
    op.drop_table('measurement_units')
    op.drop_index(op.f('ix_groups_group_id'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_food_types_food_type_id'), table_name='food_types')
    op.drop_table('food_types')
    op.drop_index(op.f('ix_categories_category_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
